server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Segurança: Ocultar versão do nginx
    server_tokens off;

    # Bloquear acesso a arquivos de ambiente
    location ~ /\.env {
        deny all;
        return 404;
    }

    # Bloquear acesso a arquivos de configuração sensíveis
    location ~ \.(env|env\.local|env\.production|env\.development)$ {
        deny all;
        return 404;
    }

    # Bloquear acesso a arquivos git
    location ~ /\.git {
        deny all;
        return 404;
    }

    # Bloquear acesso a arquivos de configuração do projeto
    location ~ \.(gitignore|dockerignore|editorconfig)$ {
        deny all;
        return 404;
    }

    # Bloquear acesso a arquivos Docker
    location ~ ^/(Dockerfile|docker-compose\.yml|docker-compose\.yaml)$ {
        deny all;
        return 404;
    }

    # Bloquear acesso a arquivos de configuração Node.js/npm
    location ~ ^/(package\.json|package-lock\.json|pnpm-lock\.yaml|yarn\.lock)$ {
        deny all;
        return 404;
    }

    # Bloquear acesso a arquivos TypeScript/JavaScript de configuração
    location ~ \.(tsconfig\.json|eslint\.config\.js|prettier\.config\.js|babel\.config\.js)$ {
        deny all;
        return 404;
    }

    # Bloquear acesso a arquivos README e documentação
    location ~ \.(md|txt|log)$ {
        deny all;
        return 404;
    }

    # Bloquear acesso ao diretório api (backend)
    location ^~ /api/ {
        deny all;
        return 404;
    }

    # Bloquear acesso a arquivos temporários e de backup
    location ~ \.(tmp|temp|bak|backup|swp|swo|log)$ {
        deny all;
        return 404;
    }

    # Bloquear acesso a arquivos que começam com ponto (arquivos ocultos)
    location ~ /\. {
        deny all;
        return 404;
    }

    # Permitir acesso aos assets estáticos necessários (CSS, JS, imagens)
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
    }

    # Permitir acesso apenas à página principal
    location = / {
        try_files /index.html =404;
        
        # Headers de segurança
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Permitir acesso à página 404 customizada
    location = /404.html {
        internal;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # Redirecionar TODAS as outras rotas para a página 404 customizada
    location / {
        # Se não for a rota raiz, redirecionar para 404
        return 404;
    }

    # Página de erro personalizada
    error_page 404 /404.html;
}
